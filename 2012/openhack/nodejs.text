Title: How to Win with Node.js
Author: by @reid
Copyright: 2012 Yahoo! Inc., licensed under the BSD License.
Footer: Yahoo! <strong>Open Hack India</strong> 2012

%css
/* sudo hackday */

@import url("http://fonts.googleapis.com/css?family=Dosis:400,800");

.deck-container {
    font-family: Dosis, sans-serif;
}

.deck-container > .slide {
    background: #fff;
    color: #000;
    /* reset padding */
    padding: 0;
    width: 100%;
    font-size: 200%;
}

.deck-container > .title {
    padding-top: 1em !important;
    font-size: 4em;
    background: #2F81C2;
}

.csstransforms .deck-container .title > * {
    -webkit-transform: rotate(-3deg); 
    -moz-transform: rotate(-3deg); 
}

.title h1 {
    text-align: left;
    margin: 0;
}

.title p {
    margin: 0.25em 0;
    font-size: 1.25em;
    color: #fff;
}

.slide h1 {
    background: #1C2C56;
    color: #fff;
    padding: 20px;
    margin: 0;
    font-weight: 800;
}

.contact h2 {
    background: #1C2C56;
    color: #fff;
    padding: 20px;
    margin: 0 0 0.25em 0;
    display: inline-block;
    font-weight: 800;
    font-size: 1em;
}

.deck-container .title h1 {
    padding: 20px;
    margin: 0;
}

/* add padding to children */

.slide h2, .slide p, .slide pre {
    padding: 0 20px;
}

/* new code style */

#bd code, #bd pre {
    background: #efefef;
    text-shadow: none;
}

#bd pre {
    margin-left: 25px;
}

.slide a {
    color: #333;
}

/* end hackday */

#ft {
    position: absolute;
    bottom: 0;
    line-height: 28px;
}

/*
.title {
    background: url(title.png);
    padding-top: 170px;
    padding-left: 30px;
    height: 580px;
    width: 990px;
    border: 1px solid #8c00a8;
    border-width: 0 1px 1px 0;
    font-size: 64px;
}

.title * {
    width: 900px;
    font-weight: 100;
    border-bottom: 1px solid #fff;
}
*/

.inline li {
    float: left;
    list-style: none;
    padding: 10px;
    margin: 7px;
    background: #232323;
    font-weight: bold;
    font-size: 180%;
}

.inline li:last-child {
    background: #343434;
}

.inline a {
    text-align: center;
}

.bigtext p,
.bigtext li {
    font-size: 200% !important;
}

.contact ul {
    font-size: 150%;
    margin: 0;
    padding: 0.5em;
    display: inline-block;
    border: 1px solid #2F81C2;
    background: #87CBFF;
}

.contact li a {
    color: #1C2C56;
    text-decoration: none;
}

.contact li {
    margin: 0;
    padding: 0;
    list-style: none;
}
    
iframe {
    width: 100%;
    height: 90%;
    border: 0;
}

.deck-container h2 {
    border-color: #1C2C56;
}
%end

# JavaScript

Prototype-based, object-oriented scripting language.

 - Web sites
 - Widgets
 - Browser extensions

Most popular language on GitHub: <https://github.com/languages>

# JavaScript Everywhere

 - [Yahoo! Connected TV](http://connectedtv.yahoo.com) widgets
 - [Universal remote controls](http://pronto.projgs.sk/down/DevelopersGuide_ProntoScript_Jan08.pdf)
 - [Realtime stock trading apps](http://bloomberg.com)

# Server-Side JavaScript 

Started in 1996: [Netscape LiveWire](http://docsrv.sco.com/INT_LiveWire/).

Refined since then: AppJet, [EtherPad](http://etherpad.com/), [CommonJS](http://commonjs.org/).

Used in Yahoo!'s [YQL](http://developer.yahoo.com/yql/).

# Node.js

Event-driven I/O framework for server-side JavaScript.

<img src="nodejs.png" style="padding: 15px; background: #fff; float: right;">

Easily create scalable network apps, like web servers.

Created in 2009. Uses the V8 JavaScript engine from Google.

<http://nodejs.org/>

!SLIDE bigtext title

Node.js is used by <span class="slide">
Joyent
</span>
<span class="slide">
Yahoo!,
</span>
<span class="slide">
Microsoft,
</span>
<span class="slide">
LinkedIn,
</span>
<span class="slide">
Uber,
</span>
<span class="slide">
Mozilla,
</span>
<span class="slide">
Voxer,
</span>
<span class="slide">
AT&T
</span>
<span class="slide">
& your hack.
</span>

# Hello, world!

<pre class="prettyprint">
var http = require('http');

http.createServer(
    function (request, response) {
        response.writeHead(200,
            {'Content-Type': 'text/plain'});
        response.end('Hello World\n');
}).listen(8000);

console.log('Started at
    http://127.0.0.1:8000/');
</pre>

# Installing

Easy installers for Windows and OS X.

<http://nodejs.org/#download>

Easily compiled from source on Linux and Solaris.

% <http://bit.ly/howtonode>
% https://github.com/joyent/node/wiki/Installation

# Node.js Package Manager

<img src="npm.png" style="float: right">

Bundled with Node.js.

<http://npmjs.org>

The package manager for Node.js modules.

    npm install modulename
    var foo = require('modulename');

# Play

Type `node` to start a REPL.

% What's a REPL?

    $ node
    > console.log('Hello, Bangalore!');
    Hello, Bangalore!

Control-D to quit.

Start a script file with `node script.js`.

!SLIDE title bigtext

What can I build with this?

!SLIDE title bigtext

**Realtime** web apps.

# SockJS

`npm install sockjs`

Cross-browser WebSockets. <http://sockjs.org>

    <script src="http://cdn.sockjs.org/sockjs-0.3.min.js">
    </script><script> 
     var sock = new SockJS("http://hackday.org/tower");
     sock.onopen = function(){ … }); 
     sock.onmessage = function(ev){ … });
     sock.onclose = function(){ … });
    </script>

# DNode

`npm install dnode`

Freestyle RPC between Node.js, the browser, Perl, Ruby and Java.

<img src="dnode.png">

<https://github.com/substack/dnode>

# Realtime apps

 - Games: massively-multiplayer is easy!
 - Chatroom
 - Shared whiteboard
 - Live stock quotes
 - Streaming charts with <http://smoothiecharts.org/>
 - Your hack

# Web Site Frameworks

Node.js is not a web server, it's a framework to make one.

Many projects exist to help build a web site.

## Connect

`npm install connect`

Low-level middleware stack for creating HTTP servers.

<http://github.com/senchalabs/connect>

# Express

`npm install express`

<pre class="prettyprint">
var express = require('express');
var app = express();

app.get('/', function(req, res){
    res.send('Hello, Bangalore!');
});

app.listen(3000);
</pre>

Router, view rendering, configuration, etc.

<http://expressjs.com/>

# Debugger

`npm install node-inspector`

Works for any Node.js program. Handy!

    node --debug-brk app.js
    node-inspector

You can now debug your app in WebKit browser.

    node --debug # Enable debug mode
    node --debug-brk # Break on startup

<http://nodejs.org/docs/latest/api/debugger.html>

!SLIDE title bigtext

Understand the API.

# Node.js API

<img src="nodejs.png" style="padding: 15px; background: #fff; float: right;">

<http://nodejs.org/docs/latest/api/>

<ul>
<li class="slide">
HTTP, UDP, DNS, TLS/SSL, Crypto, File System
</li>
<li class="slide">
Streams: powerful concept used everywhere
</li>
<li class="slide">
Child process spawning
</li>
<li class="slide">
Events
</li>
<ul>
<li class="slide">
   <code>.on</code> vs. <code>.once</code>
</li>
<li class="slide">
   <code>.removeListener</code>
</li>
</ul>
<li class="slide">
Buffers: fast way to handle large data
</li>
<li class="slide">
Much more
</li>
</ul>

!SLIDE title bigtext

Avoid nested callbacks.

# Callbacks

<pre class="prettyprint">
var file = "/etc/redhat-release";
fs.stat(file, function(err, stat) {
    if (stat.isFile()) {
        fs.readFile(file, function(err, file) {
            postRequest("http://example.com", file, function (err, response) {
                if (response.status === 200) {
                    db.save(file, function (err) {
                        next();
                    });
                }
            });
        });
    }
});
</pre>

# Better Callbacks

<pre class="prettyprint">
var file = "/etc/redhat-release";

function onPost(err, response) {
    if (response.status !== 200) throw err;
    db.save(file, next);
}

function onRead(err, file) {
    postRequest("http://example.com", file, onPost);
}

function onStat(err, stat) {
    if (stat.isFile()) fs.readFile(file, onRead);
}

fs.stat(file, onStat);
</pre>

!SLIDE bigtext title

Put some **Client-Side** on your **Server-Side**!

# jsdom

`npm install jsdom`

Implementation of the W3C DOM. Headless browser!

<pre class="prettyprint">
var jsdom = require("jsdom");
jsdom.env("http://nodejs.org/dist/", [
  'http://yui.yahooapis.com/3.5.0/build/simpleyui/simpleyui-min.js'
], function(errors, window) {
  console.log("there have been",
    window.Y.all("a").size(),
    "nodejs releases!");
});
</pre>

<https://github.com/tmpvar/jsdom>

# YUI on Node.js

`npm install yui3`

Run [YUI](http://yuilibrary.com) on Node.js!

<https://github.com/davglass/nodejs-yui3>

<img src="mojito.png" style="padding: 15px; background: #fff; float: right;">

High-performance, device-independent HTML5 applications with Yahoo! Mojito.

<http://developer.yahoo.com/cocktails/mojito/>

!SLIDE title bigtext

Talk to the **real world**.

# Serialport

<pre style="font-size: 40%">
  eeeee eeeee eeeee eeee       e  eeeee 
  8   8 8  88 8   8 8          8  8   " 
  8e  8 8   8 8e  8 8eee       8e 8eeee 
  88  8 8   8 88  8 88      e  88    88 
  88  8 8eee8 88ee8 88ee 88 8ee88 8ee88

  eeeee eeee eeeee  e  eeeee e     eeeee eeeee eeeee eeeee 
  8   " 8    8   8  8  8   8 8     8   8 8  88 8   8   8   
  8eeee 8eee 8eee8e 8e 8eee8 8e    8eee8 8   8 8eee8e  8e  
     88 88   88   8 88 88  8 88    88    8   8 88   8  88  
  8ee88 88ee 88   8 88 88  8 88eee 88    8eee8 88   8  88
</pre>

`npm install serialport`

Talk to physical devices, like an Arduino.

 - Interact with sensors
 - Write to LED displays
 - Physical controls: dials, switches, etc.

# Node.js and Hardware

<ul>
<li class="slide">
Hardware MIDI controller: <http://tmpvar.com/project/tmpad/>
</li>
<li class="slide">
Using a physical dial to seek a YouTube video synced to many devices: <http://popcornjs.com/>
</li>
<li class="slide">
Control a R/C boat from a web browser: <http://bit.ly/nodeboat>
</li>
<li class="slide">
Make your robot detect and avoid obstacles: <http://youtu.be/GVGMjsKy3WQ>
</li>
<li class="slide">
Taking JSON from YQL and writing it to a LED matrix.
</li>
</ul>

!SLIDE title contact

<h2>How to Win with Node.js</h2>
<ul>
<li>
<strong>Reid Burke</strong> Yahoo! Inc.
</li>
<li class="slide">
<strong><a href="mailto:hackday@reid.in">hackday@reid.in</a></strong>
</li>
<li>
<span class="slide">Follow <a href="http://twitter.com/reid">@reid</a></span>
<span class="slide">or visit <a href="http://reid.in/">reid.in</a></a></span>
</li>
</ul>
<p class="slide">Thank you & happy hacking.</p>

# About this slideshow

 - Slideshow source: <https://github.com/reid/decks>
 - Slideshow system based on YUI 3: <https://github.com/reid/upstage>
